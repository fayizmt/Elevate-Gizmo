<%-include ('../layouts/userHeader.ejs') %>




<!-- Start Breadcrumbs Section -->
<!-- <section class="breadcrumbs-section background_bg" data-img-src="/user/image/cart-wallpaper.jpg"> -->
	<div class="container">
    	<div class="row justify-content-center">
        	<div class="col-md-12">
                <div class="page_title text-center">
                	<h1>my cart</h1>
                    <ul class="breadcrumb justify-content-center">
                    	<li><a href="index.html">home</a></li>
                        <li><a href="#">shop</a></li>
                        <li><span>cart</span></li>
                    </ul>
                </div>
            </div>
        </div>
    </div>
</section>
<!-- End Header Section -->


<% if (cart && cart.length > 0) { %>
    <!-- Start Cart Section -->
    <section class="cart-section pt_large" id="reloadDiv">
        <div class="container">
            <div class="row">
                <div class="col-md-12">
                    <div class="cart-table table-responsive">
                        <table class="table table-bordered text-center">
                            <thead>
                                <tr class="row-1">
                                    <th class="row-title">Item</th>
                                    <th class="row-title">Product Name</th>
                                    <th class="row-title">Price</th>
                                    <th class="row-title">Quantity</th>
                                    <th class="row-title">Subtotal</th>
                                    <th class="row-title"></th>
                                </tr>
                            </thead>
                            <% cart.forEach((data) => { %>
                            <tbody>
                                <tr class="row-2">
                                    <td class="row-close close-1" data-title="product-remove"><a href="#"><i class="ion-close-circled"></i></a></td>
                                    <td class="row-img"><img src="images/products/<%= data.productId.images[0] %>" width="100px" alt="cart-img"></td>
                                    <td class="product-name" data-title="Product"><%= data.productId.productName %></td>
                                    <td class="product-price" data-title="Price">₹<%= data.productId.price %></td>
                                    <td>
                                        <div class="product_count">
                                            <button class="btn-quantity" onclick="cartCount('<%= data.productId._id %>', '<%= userId %>', -1)"><i class="fa fa-minus"></i></button>
                                            <input class="quantity-number qty" type="text" id="<%= data.productId._id %>" value="<%= data.quantity %>" min="1" max="10">
                                            <button class="btn-quantity" onclick="cartCount('<%= data.productId._id %>', '<%= userId %>', 1)"><i class="fa fa-plus"></i></button>
                                        </div>
                                    </td>
                                    <td class="product-total" data-title="Subprice">₹<%= data.totalPrice %></td>
                                    <td class="row-close close-2" data-title="product-remove">
                                        <button class="remove-btn" onclick="removeProduct('<%= data.productId._id %>')">Remove</button>
                                    </td>
                                </tr>
                            </tbody>
                            <% }) %>
                        </table>
                    </div>
                </div>
            </div>
        </div>
    
        <div class="container">
            <div class="row justify-content-between">
                <div class="col-lg-4 col-md-6">
                    <div class="cart-inner-box box-1 text-center">
                        <div class="ci-title">
                            <h6>Promotional code</h6>
                        </div>
                        <div class="ci-caption">
                            <p>Enter Your Coupon Code If you have one</p>
                            <form id="applyCouponForm">
                                <input required="" class="form-control" type="text" id="couponCodeInput" value="<%=coupon%>" placeholder="Enter coupon code">
                                <button class="btn btn-secondary" type="submit">Apply Coupon Code</button>
                            </form>
                        </div>
                    </div>
                    
                </div>
                <div class="col-lg-4 col-md-6">
                    <div class="cart-inner-box box-2 text-center">
                        <div class="ci-title">
                            <h6>Cart Total</h6>
                        </div>
                        <div class="ci-caption">
                            <ul>
                                <li>Subtotal <span>₹<%= total %></span></li>
                                <li>Total <span>₹<%= total %></span></li>
                            </ul>
                        </div>
                        <div class="ci-btn">
                            <a href="checkout" class="btn btn-primary btn-block rounded-0">Proceed to Checkout</a>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </section>
<% } else { %>
    <div class="error-content text-center">
        <dotlottie-player class="mx-auto d-block" src="https://lottie.host/5476084d-d6d5-4baf-b5a2-876d2628363b/8rll48Mwdf.json" background="transparent" speed="1" style="width: 300px; height: 300px;" loop autoplay></dotlottie-player>
        <h1 class="error-title">Nothing in Cart Yet!</h1>
        <p class="error-message">Add Products to Cart</p>
        <a href="/shop" class="btn primary-btn">Continue Shopping</a>
      </div>
      
<% } %>

<!-- End Cart Box Section -->
<script>
function cartCount(productId, userId, count) {
    const quantityElement = document.getElementById(productId);
    const quantity = parseInt(quantityElement.value);
    count = parseInt(count);

    if (count === -1 && quantity === 1) {
        // Disable the "minus" button if the quantity is 1
        return;
    }

    fetch('/count-quantity', {
        method: 'POST',
        headers: {
            'Content-Type': 'application/json',
        },
        body: JSON.stringify({
            userId: userId,
            productId: productId,
            count: count,
            quantity: quantity,
        }),
    })
    .then(response => {
        if (response.ok) {
            $("#reloadDiv").load("/cart #reloadDiv, #cartTotal", function() {
                // Update total cart price after reloading
                const cartTotalElement = document.getElementById('cartTotal').value;
                if (cartTotalElement) {
                    const total = cartTotalElement.innerText;
                    console.log('Total Cart Price:', total);
                }
            });

            return response.json();
        }
        throw new Error('Network response was not ok.');
    })
    .then(data => {
        if (data) {
            const newQuantity = quantity + count;
            quantityElement.value = newQuantity;

            // Enable the "minus" button if the quantity is greater than 0
            const minusButton = quantityElement.previousElementSibling;
            if (minusButton) { // Check if the minusButton exists before accessing its style
                if (newQuantity <= 0) {
                    minusButton.style.pointerEvents = 'none';
                    minusButton.style.opacity = 0.5;
                } else {
                    minusButton.style.pointerEvents = 'auto';
                    minusButton.style.opacity = 1;
                }
            }
        } else if (data.check) {
            swal.fire({
                icon: "error",
                title: "Oops...",
                text: "Out of stock",
            });
        } else {
            swal.fire({
                position: "center",
                icon: "warning",
                text: response.message,
                timer: 1500,
                showConfirmButton: false,
            });
        }
    })
    .catch(error => {
        console.error('There was a problem with the fetch request:', error);
    });
}


    // const removeProduct = document.querySelector('.remove-btn')
    function removeProduct(productId) {
    fetch(`/cart/${productId}`, {
      method: 'DELETE',
      headers: {
        'Content-Type': 'application/json',
      },
    })
    .then(response => {
      if (response.ok) {
        return response.json();
      }
      throw new Error('Network response was not ok.');
    })
    .then(data => {
      console.log(data);

      document.querySelector('.row-2').remove();

      Swal.fire('Success', 'Product removed successfully!', 'success');
    })
    .catch(error => {
      console.error('There was a problem removing the product:', error);
      // Optionally show an error message or handle the error
      Swal.fire('Error', 'Failed to remove product.', 'error');
    });
  }
  

  document.getElementById('applyCouponForm').addEventListener('submit', async function(event) {
    event.preventDefault(); // Prevent the default form submission

    const couponCode = document.getElementById('couponCodeInput').value.trim();
    if (couponCode) {
        try {
            const response = await fetch('/couponCheck', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                },
                body: JSON.stringify({ couponCode: couponCode }),
            });

            if (response.ok) {
                const data = await response.json();
                if (data.coupon === true) {
                    // Use SweetAlert for success message
                    Swal.fire({
                        icon: 'success',
                        title: 'Success',
                        text: 'Coupon applied successfully!',
                    }).then((result) => {
                        // You can update the UI or perform other actions here
                        if (result.isConfirmed) {
                            // Redirect or refresh the page, etc.
                        }
                    });
                } else {
                    // Use SweetAlert for error message
                    Swal.fire({
                        icon: 'error',
                        title: 'Error',
                        text: 'Failed to apply coupon: ' + data.coupon,
                    });
                    // Handle other coupon response scenarios here
                }
            } else {
                throw new Error('Network response was not ok.');
            }
        } catch (error) {
            console.error('There was a problem applying the coupon:', error);
            // Use SweetAlert for error message
            Swal.fire({
                icon: 'error',
                title: 'Error',
                text: 'Failed to apply coupon. Please try again later.',
            });
        }
    } else {
        // Use SweetAlert for empty coupon code
        Swal.fire({
            icon: 'error',
            title: 'Error',
            text: 'Please enter a coupon code.',
        });
    }
});



</script>
<%-include ('../layouts/userFooter.ejs') %>

