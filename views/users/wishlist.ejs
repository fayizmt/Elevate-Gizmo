<!DOCTYPE html>
<html lang="en">
<head>
<meta charset="UTF-8">
<meta name="viewport" content="width=device-width, initial-scale=1.0">
<title>Wishlist</title>
<!-- Add Font Awesome CDN for icons -->
<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/css/all.min.css">
<style>
  body {
    font-family: Arial, sans-serif;
    background-color: #f4f4f4;
    margin: 0;
    padding: 0;
    display: flex;
    flex-direction: column;
    align-items: center;
}

.wishlist-header {
    text-align: center;
    margin-top: 20px;
    margin-bottom: 20px;
    color: red;
    font-size: 24px;
    font-weight: bold;
}

.wishlist-container {
    max-width: 1200px;
    width: 100%;
    display: flex;
    flex-direction: column;
    align-items: center;
    margin-bottom: 20px;
}

.product-card {
    width: 500px; /* Adjust width as needed */
    background-color: #fff;
    border-radius: 8px;
    box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
    padding: 20px;
    margin-bottom: 20px; /* Add margin between product cards */
    display: flex;
    align-items: center;
}

.product-card img {
    max-width: 100px; /* Adjust image width as needed */
    height: auto;
    border-radius: 8px;
    margin-right: 20px; /* Add spacing between image and text */
}

.product-info {
    flex-grow: 1; /* Allow text to take up remaining space */
    text-align: center;
}

.product-info h2 {
    font-size: 18px;
    margin-bottom: 5px;
}

.product-info p {
    font-size: 16px;
    color: #555;
    margin-bottom: 15px;
}

.add-to-cart-btn {
    background-color: #4CAF50; /* Green background color */
    color: white;
    border: none;
    padding: 8px 16px;
    text-align: center;
    text-decoration: none;
    display: inline-block;
    font-size: 16px;
    border-radius: 5px;
    cursor: pointer;
    transition: background-color 0.3s ease;
    margin-right: 10px; /* Add spacing between buttons */
}

.add-to-cart-btn:hover {
    background-color: #45a049; /* Darker green on hover */
}

</style>
</head>
<body>

    <h1 class="wishlist-header">My Wishlist</h1>

    <div class="wishlist-container">
        <% if (wishlistData.length === 0) { %>
            <div class="empty-wishlist-container">
                <img src="/images/empty-wishlist-image.jpg" alt="Your Wishlist is Empty">
                <p class="empty-wishlist">Your wishlist is empty.</p>
            </div>
        <% } else { %>
            <% wishlistData.productId.forEach(item => { %>
                <div class="product-card">
                    <img src="/images/products/<%= item.images[0] %>" alt="<%= item.productName ? item.productName : 'Product Image' %>">
                    <div class="product-info">
                        <h2><%= item.productName ? item.productName : 'Product Name' %></h2>
                        <p>$<%= item.price ? item.price.toFixed(2) : 'Price' %></p>
    
                        <button onclick="addToCart('<%= item.id %>')"  class="add-to-cart-btn">Add to Cart</button>
                    </div>
                    <button class="delete-icon" onclick="removeFromWishlist('<%= item._id %>')"><i class="fa fa-trash" aria-hidden="true"></i></button>
                </div>
            <% }); %>
        <% } %>
    </div>
    
<!-- Script to handle adding items to the cart -->
<script src="https://cdn.jsdelivr.net/npm/sweetalert2@10"></script>
<script>
    function addToCart(id) {
        console.log(id);
        fetch('/cart/' + id, {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json'
            },
            body: JSON.stringify({ id: id })
        })
        .then(response => {
            if (!response.ok) {
                throw new Error('Network response was not ok');
            }
            return response.json();
        })
        .then(data => {
            Swal.fire({
                icon: 'success',
                title: 'Item added to cart!',
                text: data.message
            });
        })
        .catch(error => {
            console.error('Error:', error);
            Swal.fire({
                icon: 'error',
                title: 'Oops...',
                text: 'Error adding item to cart. Please try again.'
            });
        });
    }

    
</script>
<script>
   

    function removeFromWishlist(productId) {
    // Implement logic to remove the product with productId from the wishlist
    fetch('/wishlist/' + productId, {
        method: 'DELETE', // Use DELETE method for removing the item
        headers: {
            'Content-Type': 'application/json' // Set content type to application/json
        }
    })
    .then(response => {
        if (!response.ok) {
            throw new Error('Error removing item from wishlist');
        }
        return response.json();
    })
    .then(data => {
         document.querySelector('.product-card').remove();
        
            
        
        alert(data.message);
        // Optionally, you can update the UI or perform other actions after successful removal
    })
    .catch(error => {
        console.error('Error:', error);
        alert('Error removing item from wishlist. Please try again.');
    });
}

</script>

</body>
</html>
