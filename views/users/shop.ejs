<%-include ('../layouts/userHeader.ejs') %>

<!-- Start Header Section -->
<%-include ('../layouts/userSideBar.ejs') %>

<!-- End Header Section -->

<!-- Start Breadcrumbs Section -->
<section class="breadcrumbs-section background_bg" data-img-src="user/image/shop.jpeg">
	<div class="container">
    	<div class="row">
        	<div class="col-md-12">
                <div class="page_title text-center">
                	<h1>shop</h1>
                    <ul class="breadcrumb justify-content-center">
                    	<li><a href="/home">home</a></li>
                        <li><span>shop</span></li>
                    </ul>
                </div>
            </div>
        </div>
    </div>
</section>
<!-- End Header Section -->


  <!-- Start Shop Section -->
  <section class="shop-inner-section pt_large pb_large">
    <div class="container">
      <div class="row">
        <div class="col-xl-9 col-lg-8 col-md-12">
          <!-- Products Section -->
          <div class="shop-options d-sm-flex justify-content-between align-items-center">
            <!-- Sorting Options -->
            <div class="sorting-option">
              <select class="sorting-items" name="category">
                <!-- Sorting Options Content -->
              </select>
            </div>
            <!-- Showing Items -->
            <div class="showing-items">
              <p>Showing 1â€“9 of 15 results</p>
            </div>
            <!-- Shop List/Grid View -->
            <div class="shop-list_grid">
              <!-- List/Grid View Buttons -->
            </div>
          </div>
          <!-- Product List/Grid Container -->
          <div class="row list_grid_container grid justify-content-center">
            <% for (let i = 0; i < product.length; i++) { %>
            <div class="col-md-4 col-6">
              <div class="product-box common-cart-box box-1">
                <div class="product-img common-cart-img home-img">
                  <img src="/images/products/<%= product[i].images[0] %>" alt="product-img">
                  <div class="hover-option">
                    <div class="add-cart-btn">
                      <!-- Add to Cart Button -->
                    </div>
                    <ul class="hover-icon">
                      <li>
                        <button onclick="addToCart('<%= product[i].id %>')" class="addCart"><i class="fa fa-shopping-cart"></i></button>
                      </li>
                      <li>
                        <button onclick="addToWishlist('<%= product[i].id %>')" class="addWishlist"><i class="fa fa-heart"></i></button>
                      </li>
                      <li>
                        <button class="productButton" onclick="viewProduct('<%= product[i].id %>')"><i class="fa fa-eye"></i></button>
                      </li>
                    </ul>
                  </div>
                </div>
                <div class="product-info common-cart-info text-center">
                  <a href="product-detail" class="cart-name"><%= product[i].productName %></a>
                  <p class="cart-price"><del><%= product[i].actualprice %></del><%= product[i].price %></p>
                  <p class="product-list-text" style="">There are many variations of passages of Lorem Ipsum available, but the majority have suffered alteration in some form, by injected humour, or randomised words which don't look even slightly believable.</p>
                  <div class="hover-option">
                    <div class="add-cart-btn">
                      <a href="#" class="btn btn-primary">Add To Cart</a>
                    </div>
                    <ul class="hover-icon">
                      <li><a href="#"><i class="fa fa-heart"></i></a></li>
                      <li><a href="#test-popup3" class="quickview-popup-link"><i class="fa fa-eye"></i></a></li>
                      <li><a href="#"><i class="fa fa-refresh"></i></a></li>
                    </ul>
                  </div>
                </div>
              </div>
            </div>
            <% } %>
          </div>
          <!-- Pagination -->
              <nav aria-label="Page navigation">
                  <ul class="pagination justify-content-center">
                    <% for (let page = 1; page <= totalPages; page++) { %>
                        <li class="page-item<%= currentPage === page ? ' active' : '' %>">
                            <a class="page-link" href="/shop?page=<%= page %>"><%= page %></a>
                        </li>
                    <% } %>
                  <!-- Pagination Content -->
              </nav>
        </div>
        <!-- Sidebar Filters -->
        <div class="col-xl-3 col-lg-4 col-md-12 order-lg-first">
          <!-- Sidebar Filters HTML -->
          <div class="shop-sidebar">
            <!-- Categories Filter -->
            <div class="side-quantity-box side-box">
              <div class="side-box-title">
                <h6>Categories</h6>
              </div>
              <div class="quantity-box-detail">
                <ul>
                  <!-- Category List with Radio Buttons -->
                  <li><label><input type="radio" name="category" value="662a20426005d88f6fd3a5f1">Samsung <span>(10)</span></label></li>
                  <li><label><input type="radio" name="category" value="662cc4afa77b336611414882">watches <span>(05)</span></label></li>
                  <li><label><input type="radio" name="category" value="662cc505a77b336611414886"> Laptop<span>(15)</span></label></li>
                  <li><label><input type="radio" name="category" value="662cc6b0a77b33661141488a"> Headphones<span>(20)</span></label></li>
                  <li><label><input type="radio" name="category" value="662cc7f9b2afd3a103d09172"> Monitors<span>(07)</span></label></li>
                </ul>
              </div>
              
              
            </div>
            <!-- Price Range Filter -->
            <div class="side-filter-box side-box" id="filter">
              <div class="side-box-title">
                <h6>Filter</h6>
              </div>
              <div class="filter-box-detail">
                <div id="slider-range"></div>
                <div class="price_slider_amount">
                  <div class="slider-values d-flex align-items-center">
                    <p>Price</p>
                    <!-- Replace select dropdown with radio buttons -->
                    <input type="radio" id="lowToHigh" name="sort" value="low-to-high">
                    <label for="lowToHigh">Low to High</label>
                    <input type="radio" id="highToLow" name="sort" value="high-to-low">
                    <label for="highToLow">High to Low</label>
                    <!-- Updated button with onclick event -->
                    <button id="applyFiltersBtn">Apply Filters</button>
                  </div>
                </div>
              </div>
              
              

            
            <!-- Color Filter -->
            
            <!-- Recent Products -->
            <div class="side-quantity-box side-box">
              <div class="side-box-title">
                <!-- <h6>Recent Products</h6> -->
              </div>
              <div class="side-recent-product">
                <!-- Recent Products Content -->
              </div>
              
            </div>
          </div>
        </div>
      </div>
    </div>
  </section>
  <!-- End Shop Section -->





<!-- Start Footer Section -->

<script src="https://cdn.jsdelivr.net/npm/sweetalert2@10"></script>
<script>
    function addToCart(id) {
        console.log(id);
        fetch('/cart/' + id, {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json'
            },
            body: JSON.stringify({ id: id })
        })
        .then(response => {
            if (!response.ok) {
                throw new Error('Network response was not ok');
            }
            return response.json();
        })
        .then(data => {
            Swal.fire({
                icon: 'success',
                title: 'Item added to cart!',
                text: data.message
            });
        })
        .catch(error => {
            console.error('Error:', error);
            Swal.fire({
                icon: 'error',
                title: 'Oops...',
                text: 'Error adding item to cart. Please try again.'
            });
        });
    }

    
</script>
                                        
<script>
    const addWishlist = document.querySelector('.addWishlist');
    
    function addToWishlist(id) {
        console.log(id);
        
        fetch('/wishlist/' + id, {
            method: 'POST',
            headers: {
                'Content-Type': 'text/plain' 
            },
            body: id 
        })
        .then(response => {
            return response.json(); 
        })
        .then(data => {
            
            Swal.fire({
                title: 'Item Added to Wishlist',
                text: data.message,
                icon: 'success',
                confirmButtonText: 'OK'
            });
        })
        .catch(error => {
            console.error('Error:', error);
            alert('Error adding item to wishlist. Please try again.');
        });
    }
    function viewProduct(productId) {
  const productDetailUrl = `/product-detail/${productId}`;
  window.location.href = productDetailUrl;
}
</script>
<script>

let preinputvalue = "";

async function handleSearchInput(event) {
  const partialInput = document.getElementById("searchInput").value;
  console.log("Partial Input:", partialInput); // Log partial input value
  if (event.key === "Enter") {
    console.log("Enter key pressed. Redirecting...");
    window.location.href = `/shop?search=${partialInput}`;
  } else {
    if (partialInput !== preinputvalue) {
      console.log("Fetching autocomplete suggestions...");
      try {
        const response = await fetch(`/search?input=${partialInput}`);
        const data = await response.json();
        console.log("Autocomplete Suggestions:", data.suggestions); // Log autocomplete suggestions
        displayAutocompleteSuggestions(data.suggestions);
        preinputvalue = partialInput;
      } catch (error) {
        console.error("Error fetching autocomplete suggestions:", error);
      }
    }
  }
}

document.getElementById("applyFiltersBtn").addEventListener("click", function () {
  // Get selected category
  const selectedCategory = document.querySelector('input[name="category"]:checked');
  console.log(selectedCategory);
  const categoryValue = selectedCategory ? selectedCategory.value : null;
  // Get selected price filter
  const selectedPriceFilter = document.querySelector('input[name="sort"]:checked');
  const priceFilterValue = selectedPriceFilter ? selectedPriceFilter.value : null;
  // Get product name filter value
  // Construct filters object
  const filters = {
      category: categoryValue,
      priceFilter: priceFilterValue,
  };
  // Construct query string
  const queryString = Object.keys(filters)
      .filter((key) => filters[key] !== null && filters[key] !== "")
      .map((key) => `${key}=${encodeURIComponent(filters[key])}`)
      .join("&");
  // Construct URL
  const url = `/shop?${queryString}`;
  // Redirect user
  window.location.href = url;
});
</script>



<%-include ('../layouts/userFooter.ejs') %>
